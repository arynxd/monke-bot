plugins{
    id 'java'
    id 'application'
    id 'com.github.johnrengelman.shadow' version '6.1.0'
    id 'nu.studer.jooq' version '5.2.1'
}
mainClassName = 'me.arynxd.monkebot.Main'
sourceCompatibility = 14

repositories {
    jcenter()
    maven { url 'https://jitpack.io' }
}

dependencies {

    //Misc / Util
    implementation 'info.debatty:java-string-similarity:2.0.0'
    implementation 'io.github.classgraph:classgraph:4.8.120'
    implementation 'ch.qos.logback:logback-classic:1.2.3'
    implementation 'net.jodah:expiringmap:0.5.9'

    //Web
    implementation 'org.jsoup:jsoup:1.13.1'
    implementation "io.javalin:javalin:3.13.3"
    implementation 'io.prometheus:simpleclient:0.10.0'
    implementation 'io.prometheus:simpleclient_hotspot:0.10.0'
    implementation 'io.prometheus:simpleclient_httpserver:0.10.0'

    //Eval
    implementation 'org.codehaus.groovy:groovy-jsr223:3.0.7'

    //Discord

    implementation 'net.dv8tion:JDA:4.2.0_230'
    implementation 'com.sedmelluq:lavaplayer:1.3.71'

    //Database
    implementation 'org.postgresql:postgresql:42.2.19'
    jooqGenerator 'org.postgresql:postgresql:42.2.18'

    implementation 'com.zaxxer:HikariCP:4.0.2'
    implementation 'org.jooq:jooq:3.14.7'
}

jooq {
    version = '3.14.4'
    configurations {
        main {
                generateSchemaSourceOnCompilation = false
                generationTool {
                    logging = org.jooq.meta.jaxb.Logging.WARN
                    jdbc {
                        url = MONKE_DB_URL
                        user = MONKE_DB_USER
                        password = MONKE_DB_PASSWORD
                        driver = 'org.postgresql.Driver'
                    }
                    generator {
                        name = 'org.jooq.codegen.DefaultGenerator'
                        database {
                            name = 'org.jooq.meta.postgres.PostgresDatabase'
                            inputSchema = 'public'
                            includes = '.*'
                            excludes = ''
                        }
                        generate {
                            deprecated = false
                            records = true
                            immutablePojos = true
                            fluentSetters = true
                        }
                        target {
                            packageName = ''
                            directory = "src/main/java/me/arynxd/monkebot/entities/jooq"
                            clean = true
                        }
                        strategy.name = "org.jooq.codegen.DefaultGeneratorStrategy"
                }
            }
        }
    }
}

compileJava.options.encoding = 'UTF-8'
